{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datavaultpoc"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzurePostgreSql1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzurePostgreSql1'"
		},
		"AzurePostgreSql_nagarro_shared_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzurePostgreSql_nagarro_shared'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"BlobStorageLinkedServices_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'BlobStorageLinkedServices'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzurePostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('AzurePostgreSql1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSql_nagarro_shared')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzurePostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('AzurePostgreSql_nagarro_shared_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobStorageLinkedServices')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('BlobStorageLinkedServices_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzurePostgreSql_datavault')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzurePostgreSql_nagarro_shared",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [
					{
						"name": "customer_id",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "salutation",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "first_name",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "last_name",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "dob",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "birth_country",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "email_address",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "phone_number",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "phone_number_type",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "address_id",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "country",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "county",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "state",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "city",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "street_number",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "street_name",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "zip",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "retail",
					"table": "custmer_info"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzurePostgreSql_nagarro_shared')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Customer_info')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzurePostgreSql_nagarro_shared",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzurePostgreSqlTable",
				"schema": [
					{
						"name": "customer_id",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "salutation",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "first_name",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "last_name",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "dob",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "birth_country",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "email_address",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "phone_number",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "phone_number_type",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "address_id",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "country",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "county",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "state",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "city",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "street_number",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "street_name",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "zip",
						"type": "character varying",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "retail",
					"table": "custmer_info"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzurePostgreSql_nagarro_shared')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HUB_Store')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HK_STORE_ID",
						"type": "varbinary"
					},
					{
						"name": "STORE_ID",
						"type": "varchar"
					},
					{
						"name": "LOAD_DTS",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "REC_SRC",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "HUB_STORE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SATStore')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "SAT_STORE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAT_Customer_Address')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HK_STORE_ID",
						"type": "varbinary"
					},
					{
						"name": "STORE_ID",
						"type": "varchar"
					},
					{
						"name": "LOAD_DTS",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "REC_SRC",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SAT_CUSTOMER_Address"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StoreSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "STORE_INFO.csv",
						"container": "datavault-src"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "STORE_ID",
						"type": "String"
					},
					{
						"name": "WAREHOUSE_ID",
						"type": "String"
					},
					{
						"name": "WAREHOUSE_NAME",
						"type": "String"
					},
					{
						"name": "WAREHOUSE_COUNTRY",
						"type": "String"
					},
					{
						"name": "WAREHOUSE_STATE",
						"type": "String"
					},
					{
						"name": "WAREHOUSE_CITY",
						"type": "String"
					},
					{
						"name": "WAREHOUSE_STREET_NUMBER",
						"type": "String"
					},
					{
						"name": "WAREHOUSE_STREET_NAME",
						"type": "String"
					},
					{
						"name": "WAREHOUSE_STREET_TYPE",
						"type": "String"
					},
					{
						"name": "WAREHOUSE_ZIP",
						"type": "String"
					},
					{
						"name": "STORE_NAME",
						"type": "String"
					},
					{
						"name": "STORE_COUNTRY",
						"type": "String"
					},
					{
						"name": "STORE_COUNTY",
						"type": "String"
					},
					{
						"name": "STORE_STATE",
						"type": "String"
					},
					{
						"name": "STORE_CITY",
						"type": "String"
					},
					{
						"name": "STORE_STREET_NUMBER",
						"type": "String"
					},
					{
						"name": "STORE_STREET_NAME",
						"type": "String"
					},
					{
						"name": "STORE_ZIP",
						"type": "String"
					},
					{
						"name": "NUMBER_EMPLOYEES",
						"type": "String"
					},
					{
						"name": "WORKING_HOURS",
						"type": "String"
					},
					{
						"name": "MANAGER_NAME",
						"type": "String"
					},
					{
						"name": "SALES_PERSON_ID",
						"type": "String"
					},
					{
						"name": "SALES_PERSON_TYP",
						"type": "String"
					},
					{
						"name": "SALES_PERSON_TITLE",
						"type": "String"
					},
					{
						"name": "SALES_PERSON_FIRST_NAME",
						"type": "String"
					},
					{
						"name": "SALES_PERSON_LAST_NAME",
						"type": "String"
					},
					{
						"name": "SALES_PERSON_SUFFIX",
						"type": "String"
					},
					{
						"name": "SALES_PERSON_EMAIL_ADDRESS",
						"type": "String"
					},
					{
						"name": "SALES_PERSON_PHONE_NUMBER",
						"type": "String"
					},
					{
						"name": "SALES_PERSON_PHONE_NUMBER_TYPE",
						"type": "String"
					},
					{
						"name": "SALES_QUOTA",
						"type": "String"
					},
					{
						"name": "SALES_PERSON_BONUS",
						"type": "String"
					},
					{
						"name": "COMMISSION_PCT",
						"type": "String"
					},
					{
						"name": "SALES_YTD",
						"type": "String"
					},
					{
						"name": "SALES_LAST_YEAR",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Customer-address-load')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Customer_info",
								"type": "DatasetReference"
							},
							"name": "satCustomerAddress"
						},
						{
							"dataset": {
								"referenceName": "SAT_Customer_Address",
								"type": "DatasetReference"
							},
							"name": "satcustomeraddressprev"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Customer_info",
								"type": "DatasetReference"
							},
							"name": "SATCustomerAddressLoad"
						}
					],
					"transformations": [
						{
							"name": "customerselect"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "SatCustomerExists"
						}
					],
					"script": "source(output(\n\t\tcustomer_id as string,\n\t\tsalutation as string,\n\t\tfirst_name as string,\n\t\tlast_name as string,\n\t\tdob as date,\n\t\tbirth_country as string,\n\t\temail_address as string,\n\t\tphone_number as string,\n\t\tphone_number_type as string,\n\t\taddress_id as string,\n\t\tcountry as string,\n\t\tcounty as string,\n\t\tstate as string,\n\t\tcity as string,\n\t\tstreet_number as string,\n\t\tstreet_name as string,\n\t\tzip as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> satCustomerAddress\nsource(output(\n\t\tHK_STORE_ID as binary,\n\t\tSTORE_ID as string,\n\t\tLOAD_DTS as timestamp,\n\t\tREC_SRC as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> satcustomeraddressprev\nsatCustomerAddress select(mapColumn(\n\t\tcustomer_id,\n\t\tstreet_number,\n\t\tstreet_name,\n\t\tcity,\n\t\tcounty,\n\t\tstate,\n\t\tzip,\n\t\tcountry\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> customerselect\ncustomerselect derive(HK_CUSTOMER_ID = md5(customer_id),\n\t\tLOAD_DTS = currentDate(),\n\t\tREC_SRC = 'Customer Address Load') ~> DerivedColumn1\ncustomerselect, satcustomeraddressprev exists(customer_id==customer_id,\n\tnegate:true,\n\tbroadcast: 'auto')~> SatCustomerExists\nSatCustomerExists sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tcustomer_id as string,\n\t\tsalutation as string,\n\t\tfirst_name as string,\n\t\tlast_name as string,\n\t\tdob as date,\n\t\tbirth_country as string,\n\t\temail_address as string,\n\t\tphone_number as string,\n\t\tphone_number_type as string,\n\t\taddress_id as string,\n\t\tcountry as string,\n\t\tcounty as string,\n\t\tstate as string,\n\t\tcity as string,\n\t\tstreet_number as string,\n\t\tstreet_name as string,\n\t\tzip as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SATCustomerAddressLoad"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Customer_info')]",
				"[concat(variables('factoryId'), '/datasets/SAT_Customer_Address')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Store-load')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "StoreSource",
								"type": "DatasetReference"
							},
							"name": "satSource"
						},
						{
							"dataset": {
								"referenceName": "HUB_Store",
								"type": "DatasetReference"
							},
							"name": "HubStore1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HUB_Store",
								"type": "DatasetReference"
							},
							"name": "Hubstore"
						}
					],
					"transformations": [
						{
							"name": "storeIdselect"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "SatHubExists"
						}
					],
					"script": "source(output(\n\t\tSTORE_ID as string,\n\t\tWAREHOUSE_ID as string,\n\t\tWAREHOUSE_NAME as string,\n\t\tWAREHOUSE_COUNTRY as string,\n\t\tWAREHOUSE_STATE as string,\n\t\tWAREHOUSE_CITY as string,\n\t\tWAREHOUSE_STREET_NUMBER as string,\n\t\tWAREHOUSE_STREET_NAME as string,\n\t\tWAREHOUSE_STREET_TYPE as string,\n\t\tWAREHOUSE_ZIP as string,\n\t\tSTORE_NAME as string,\n\t\tSTORE_COUNTRY as string,\n\t\tSTORE_COUNTY as string,\n\t\tSTORE_STATE as string,\n\t\tSTORE_CITY as string,\n\t\tSTORE_STREET_NUMBER as string,\n\t\tSTORE_STREET_NAME as string,\n\t\tSTORE_ZIP as string,\n\t\tNUMBER_EMPLOYEES as string,\n\t\tWORKING_HOURS as string,\n\t\tMANAGER_NAME as string,\n\t\tSALES_PERSON_ID as string,\n\t\tSALES_PERSON_TYP as string,\n\t\tSALES_PERSON_TITLE as string,\n\t\tSALES_PERSON_FIRST_NAME as string,\n\t\tSALES_PERSON_LAST_NAME as string,\n\t\tSALES_PERSON_SUFFIX as string,\n\t\tSALES_PERSON_EMAIL_ADDRESS as string,\n\t\tSALES_PERSON_PHONE_NUMBER as string,\n\t\tSALES_PERSON_PHONE_NUMBER_TYPE as string,\n\t\tSALES_QUOTA as string,\n\t\tSALES_PERSON_BONUS as string,\n\t\tCOMMISSION_PCT as string,\n\t\tSALES_YTD as string,\n\t\tSALES_LAST_YEAR as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> satSource\nsource(output(\n\t\tHK_STORE_ID as binary,\n\t\tSTORE_ID as string,\n\t\tLOAD_DTS as timestamp,\n\t\tREC_SRC as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> HubStore1\nsatSource select(mapColumn(\n\t\tStore_ID = STORE_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> storeIdselect\nstoreIdselect derive(HK_Store_ID = md5(Store_ID),\n\t\tLoad_date_time = currentDate(),\n\t\tRec_src = 'HUB_LOAD') ~> DerivedColumn1\nDerivedColumn1, HubStore1 exists(storeIdselect@Store_ID == HubStore1@STORE_ID,\n\tnegate:true,\n\tbroadcast: 'auto')~> SatHubExists\nSatHubExists sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tHK_STORE_ID as binary,\n\t\tSTORE_ID as string,\n\t\tLOAD_DTS as timestamp,\n\t\tREC_SRC as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tSTORE_ID = Store_ID,\n\t\tHK_STORE_ID = HK_Store_ID,\n\t\tLOAD_DTS = Load_date_time,\n\t\tREC_SRC = Rec_src\n\t)) ~> Hubstore"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/StoreSource')]",
				"[concat(variables('factoryId'), '/datasets/HUB_Store')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Hubstore-load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Store-load",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"satSource": {},
									"HubStore1": {},
									"Hubstore": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Store-load')]"
			]
		}
	]
}